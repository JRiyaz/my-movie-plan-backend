version: '3.0'

services:
  springboot-docker-container:
    image: movie-plan-backend
    container_name: movie-plan-backend
    ports:
      - 9090:5555
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - movie-net
    environment:
      - spring.datasource.url=jdbc:mysql://movie_db:3306/my_movie_plan?allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=mysql
      - spring.datasource.password=root
      - spring.jpa.generate-ddl=true
      - spring.jpa.hibernate.ddl-auto=create-drop
      - spring.jpa.show-sql=true
      - spring.jpa.properties.hibernate.format_sql=true
      - spring.jpa.properties.hibernate.globally_quoted_identifiers=true
      - spring.jpa.properties.hibernate.dialect.storage_engine=innodb
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
      - spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    depends_on:
      - movie_db

  movie_db:
    image: "mysql:8.3.0"
    restart: on-failure
    ports:
      - 3306:3306
    networks:
      - movie-net 
    environment:
      - MYSQL_ROOT_PASSWORD=admin@root
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=my_movie_plan

networks:
  movie-net:


# docker exec -it my-movie-plan-backend-movie_db-1 bash
# mysql -u mysql -p
# show databases
# use <database>
# show tables
